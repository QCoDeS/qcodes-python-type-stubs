"""
This type stub file was generated by pyright.
"""

"""
Tests of the code in uncertainties.umath.

These tests can be run through the Nose testing framework.

(c) 2010-2016 by Eric O. LEBIGOT (EOL).
"""
def test_fixed_derivatives_math_funcs(): # -> None:
    """
    Comparison between function derivatives and numerical derivatives.

    This comparison is useful for derivatives that are analytical.
    """
    ...

def test_compound_expression(): # -> None:
    """
    Test equality between different formulas.
    """
    ...

def test_numerical_example(): # -> None:
    "Test specific numerical examples"
    ...

def test_monte_carlo_comparison(): # -> None:
    """
    Full comparison to a Monte-Carlo calculation.

    Both the nominal values and the covariances are compared between
    the direct calculation performed in this module and a Monte-Carlo
    simulation.
    """
    ...

def test_math_module(): # -> None:
    "Operations with the math module"
    ...

def test_hypot(): # -> None:
    '''
    Special cases where derivatives cannot be calculated:
    '''
    ...

def test_power_all_cases(): # -> None:
    '''
    Test special cases of umath_core.pow().
    '''
    ...

def test_power_special_cases(): # -> None:
    '''
    Checks special cases of umath_core.pow().
    '''
    ...

def test_power_wrt_ref(): # -> None:
    '''
    Checks special cases of the umath_core.pow() power operator.
    '''
    ...

