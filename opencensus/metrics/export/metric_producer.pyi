"""
This type stub file was generated by pyright.
"""

class MetricProducer:
    """Produces a set of metrics for export."""
    def get_metrics(self):
        """Get a set of metrics to be exported.

        :rtype: set(:class: `opencensus.metrics.export.metric.Metric`)
        :return: A set of metrics to be exported.
        """
        ...
    


class MetricProducerManager:
    """Container class for MetricProducers to be used by exporters.

    :type metric_producers: iterable(class: 'MetricProducer')
    :param metric_producers: Optional initial metric producers.
    """
    def __init__(self, metric_producers=...) -> None:
        ...
    
    def add(self, metric_producer): # -> None:
        """Add a metric producer.

        :type metric_producer: :class: 'MetricProducer'
        :param metric_producer: The metric producer to add.
        """
        ...
    
    def remove(self, metric_producer): # -> None:
        """Remove a metric producer.

        :type metric_producer: :class: 'MetricProducer'
        :param metric_producer: The metric producer to remove.
        """
        ...
    
    def get_all(self): # -> set[Unknown]:
        """Get the set of all metric producers.

        Get a copy of `metric_producers`. Prefer this method to using the
        attribute directly to avoid other threads adding/removing producers
        while you're reading it.

        :rtype: set(:class: `MetricProducer`)
        :return: A set of all metric producers at the time of the call.
        """
        ...
    


