"""
This type stub file was generated by pyright.
"""

"""SpanContext encapsulates the current context within the request's trace."""
_INVALID_TRACE_ID = ...
INVALID_SPAN_ID = ...
TRACE_ID_PATTERN = ...
SPAN_ID_PATTERN = ...
DEFAULT_OPTIONS = ...
class SpanContext:
    """SpanContext includes 3 fields: traceId, spanId, and an trace_options flag
    which indicates whether or not the request is being traced. It contains the
    current context to be propagated to the child spans.

    :type trace_id: str
    :param trace_id: (Optional) Trace_id is a 32 digits uuid for the trace.
                     If not given, will generate one automatically.

    :type span_id: str
    :param span_id: (Optional) Identifier for the span, unique within a trace.

    :type trace_options: :class: `~opencensus.trace.trace_options.TraceOptions`
    :param trace_options: (Optional) TraceOptions indicates 8 trace options.

    :type from_header: bool
    :param from_header: (Optional) Indicates whether the trace context is
                        generated from request header.
    """
    def __init__(self, trace_id=..., span_id=..., trace_options=..., tracestate=..., from_header=...) -> None:
        ...
    
    def __repr__(self): # -> str:
        """Returns a string form of the SpanContext.

        :rtype: str
        :returns: String form of the SpanContext.
        """
        ...
    


def generate_span_id(): # -> str:
    """Return the random generated span ID for a span. Must be a 16 character
    hexadecimal encoded string

    :rtype: str
    :returns: 16 digit randomly generated hex trace id.
    """
    ...

def generate_trace_id(): # -> str:
    """Generate a random 32 char hex trace_id.

    :rtype: str
    :returns: 32 digit randomly generated hex trace id.
    """
    ...

