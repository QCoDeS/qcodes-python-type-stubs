"""
This type stub file was generated by pyright.
"""

import sys

if sys.version_info < (3, ):
    ...
else:
    ...
_requests_lock = ...
requests_map = ...
ORIGINAL_CONSTRUCTOR = ...
def request_patch(func): # -> (self: Unknown | None = None) -> None:
    ...

def update_request_state(start_time, end_time): # -> None:
    ...

def server_patch(*args, **kwargs): # -> None:
    ...

def setup(): # -> None:
    ...

def get_average_execution_time(): # -> float:
    ...

def get_requests_rate(): # -> float | int:
    ...

class RequestsAvgExecutionMetric:
    NAME = ...
    def __init__(self) -> None:
        ...
    
    @staticmethod
    def get_value(): # -> float:
        ...
    
    def __call__(self): # -> DerivedDoubleGauge:
        """ Returns a derived gauge for incoming requests execution rate

        Calculated by getting the time it takes to make an incoming request
        and dividing over the amount of incoming requests over an elapsed time.

        :rtype: :class:`opencensus.metrics.export.gauge.DerivedLongGauge`
        :return: The gauge representing the incoming requests metric
        """
        ...
    


class RequestsRateMetric:
    NAME = ...
    def __init__(self) -> None:
        ...
    
    @staticmethod
    def get_value(): # -> float | int:
        ...
    
    def __call__(self): # -> DerivedDoubleGauge:
        """ Returns a derived gauge for incoming requests per second

        Calculated by obtaining by getting the number of incoming requests
        made to an HTTPServer within an elapsed time and dividing that value
        over the elapsed time.

        :rtype: :class:`opencensus.metrics.export.gauge.DerivedLongGauge`
        :return: The gauge representing the incoming requests metric
        """
        ...
    


