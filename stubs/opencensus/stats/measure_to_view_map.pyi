"""
This type stub file was generated by pyright.
"""

logger = ...
class MeasureToViewMap:
    """Measure To View Map stores a map from names of Measures to
    specific View Datas

    """
    def __init__(self) -> None:
        ...
    
    @property
    def exported_views(self): # -> set[Unknown] | None:
        """the current exported views"""
        ...
    
    @property
    def exporters(self): # -> list[Unknown]:
        """registered exporters"""
        ...
    
    def get_view(self, view_name, timestamp): # -> None:
        """get the View Data from the given View name"""
        ...
    
    def filter_exported_views(self, all_views): # -> set[Unknown]:
        """returns the subset of the given view that should be exported"""
        ...
    
    def register_view(self, view, timestamp): # -> None:
        """registers the view's measure name to View Datas given a view"""
        ...
    
    def record(self, tags, measurement_map, timestamp, attachments=...): # -> None:
        """records stats with a set of tags"""
        ...
    
    def export(self, view_datas): # -> None:
        """export view datas to registered exporters"""
        ...
    
    def get_metrics(self, timestamp): # -> Generator[Metric, None, None]:
        """Get a Metric for each registered view.

        Convert each registered view's associated `ViewData` into a `Metric` to
        be exported.

        :type timestamp: :class: `datetime.datetime`
        :param timestamp: The timestamp to use for metric conversions, usually
        the current time.

        :rtype: Iterator[:class: `opencensus.metrics.export.metric.Metric`]
        """
        ...
    
    def copy_and_finalize_view_data(self, view_data):
        ...
    


