"""
This type stub file was generated by pyright.
"""

import ctypes
from . import wnd_hook_mixin

"""PnP Window Mixing.

Plug and Play nottifications are sent only to Window devices
(devices that have a window handle.

So regardless of the GUI toolkit used, the Mixin' classes
expose here can be used.
"""
WndProcHookMixin = wnd_hook_mixin.WndProcHookMixin
class DevBroadcastDevInterface(ctypes.Structure):
    """DEV_BROADCAST_DEVICEINTERFACE ctypes structure wrapper"""
    _fields_ = ...
    def __init__(self) -> None:
        """Initialize the fields for device interface registration"""
        ...
    


WM_DEVICECHANGE = ...
DBT_CONFIGCHANGED = ...
DBT_DEVICEARRIVAL = ...
DBT_DEVICEREMOVECOMPLETE = ...
RegisterDeviceNotification = ...
UnregisterDeviceNotification = ...
DBT_DEVTYP_DEVICEINTERFACE = ...
DBT_DEVTYP_HANDLE = ...
DEVICE_NOTIFY_WINDOW_HANDLE = ...
DEVICE_NOTIFY_SERVICE_HANDLE = ...
class HidPnPWindowMixin(WndProcHookMixin):
    """Base for receiving PnP notifications.
    Just call HidPnPWindowMixin.__init__(my_hwnd) being
    my_hwnd the OS window handle (most GUI toolkits
    allow to get the system window handle).
    """
    def __init__(self, wnd_handle) -> None:
        """HidPnPWindowMixin initializer"""
        ...
    
    def unhook_wnd_proc(self): # -> None:
        "This function must be called to clean up system resources"
        ...
    
    def on_hid_pnp(self, new_status): # -> Literal[True]:
        "'Virtual' like function to refresh update for connection status"
        ...
    


